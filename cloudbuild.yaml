steps:
  # Step to build and push the Go service
  - name: "gcr.io/cloud-builders/docker"
    args: ['build', '-t', 'gcr.io/bilguun3/go-microservice', '-f', 'go-services/Dockerfile', 'go-services']
  - name: "gcr.io/cloud-builders/docker"
    args: ['push', 'gcr.io/bilguun3/go-microservice']

  # Step to deploy pgAdmin to Cloud Run
  - name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
    entrypoint: gcloud
    args:
      [
        'run', 'deploy', 'pg-admin-services',
        '--image', 'gcr.io/bilguun3/pgadmin-services',
        '--region', 'us-central1',
        '--add-cloudsql-instances', 'bilguun3:us-central1:mypostgres',
        '--platform', 'managed',
        '--port', '80',
        '--allow-unauthenticated',
        '--set-env-vars', 'PGADMIN_DEFAULT_EMAIL=user@gmail.com',
        '--set-env-vars', 'PGADMIN_DEFAULT_PASSWORD=SuperSecret'
      ]

  # Step to deploy the Go service to Cloud Run
  - name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
    entrypoint: gcloud
    args:
      [
        'run', 'deploy', 'go-services',
        '--image', 'gcr.io/bilguun3/go-services',
        '--region', 'us-central1',
        '--add-cloudsql-instances', 'bilguun3:us-central1:mypostgres',
        '--platform', 'managed',
        '--port', '8080',
        '--allow-unauthenticated'
      ]

  # Step to build and push the Python service
  - name: "gcr.io/cloud-builders/docker"
    args: ['build', '-t', 'gcr.io/bilguun3/python-service's, '-f', 'python-services/Dockerfile', 'python-services']
  - name: "gcr.io/cloud-builders/docker"
    args: ['push', 'gcr.io/bilguun3/python-service']

  # Step to deploy the Python service to Cloud Run
  - name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
    entrypoint: gcloud
    args:
      [
        'run', 'deploy', 'python-services',
        '--image', 'gcr.io/bilguun3/python-services',
        '--region', 'us-central1',
        '--add-cloudsql-instances', 'bilguun3:us-central1:mypostgres',
        '--platform', 'managed',
        '--port', '8050',
        '--timeout', '300s',
        '--allow-unauthenticated'
      ]

options:
  logging: CLOUD_LOGGING_ONLY

images:
  - gcr.io/bilguun3/go-services
  - gcr.io/bilguun3/python-services
  - gcr.io/bilguun3/pgadmin-services
